C51 COMPILER V9.00   12864                                                                 05/17/2017 12:41:03 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE 12864
OBJECT MODULE PLACED IN 12864.OBJ
COMPILER INVOKED BY: F:\keilc51\C51\BIN\C51.EXE 12864.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "main.h"
   2          
   3          extern unsigned char g_ucTempbuf[20]; 
   4          uchar code dis1[] = {"手机充电桩"};
   5          uchar code dis2[] = {"RFID刷卡系统"};
   6          uchar code dis3[] = {"主控芯片RC522 "};
   7          uchar code dis4[] = {"请您刷卡充电！ "};
   8          uchar code table3[]={"卡号:"};
   9          uchar code table4[]={"卡类型:"};
  10          
  11          
  12          /*******************************************************************/
  13          /*                                                                 */
  14          /*  延时函数                                                       */
  15          /*                                                                 */
  16          /*******************************************************************/
  17          void delay(int ms)
  18          {
  19   1          while(ms--)
  20   1              {
  21   2            uchar i;
  22   2                for(i=0;i<250;i++)  
  23   2                 {
  24   3                  _nop_();                       
  25   3                      _nop_();
  26   3                      _nop_();
  27   3                      _nop_();
  28   3                 }
  29   2              }
  30   1      }               
  31          /*******************************************************************/
  32          /*                                                                 */
  33          /*检查LCD忙状态                                                    */
  34          /*lcd_busy为1时，忙，等待。lcd-busy为0时,闲，可写指令与数据。      */
  35          /*                                                                 */
  36          /*******************************************************************/
  37          bit lcd_busy()
  38           {                          
  39   1          bit result;
  40   1          LCM_RS = 0;
  41   1          LCM_RW = 1;
  42   1          LCM_EN = 1;
  43   1          delayNOP();
  44   1          result = (bit)(P0&0x80);
  45   1          LCM_EN = 0;
  46   1          return(result); 
  47   1       }
  48          /*******************************************************************/
  49          /*                                                                 */
  50          /*写指令数据到LCD                                                  */
  51          /*RS=L，RW=L，E=高脉冲，D0-D7=指令码。                             */
  52          /*                                                                 */
  53          /*******************************************************************/
  54          void lcd_wcmd(uchar cmd)
  55          {                          
C51 COMPILER V9.00   12864                                                                 05/17/2017 12:41:03 PAGE 2   

  56   1         while(lcd_busy());
  57   1          LCM_RS = 0;
  58   1          LCM_RW = 0;
  59   1          LCM_EN = 0;
  60   1          _nop_();
  61   1          _nop_(); 
  62   1          P0 = cmd;
  63   1          delayNOP();
  64   1          LCM_EN = 1;//下降沿写入
  65   1          delayNOP();
  66   1          LCM_EN = 0;  
  67   1      }
  68          /*******************************************************************/
  69          /*                                                                 */
  70          /*写显示数据到LCD                                                  */
  71          /*RS=H，RW=L，E=高脉冲，D0-D7=数据。                               */
  72          /*                                                                 */
  73          /*******************************************************************/
  74          void lcd_wdat(uchar dat)
  75          {                          
  76   1         while(lcd_busy());
  77   1          LCM_RS = 1;
  78   1          LCM_RW = 0;
  79   1          LCM_EN = 0;
  80   1          P0 = dat;
  81   1          delayNOP();
  82   1          LCM_EN = 1;
  83   1          delayNOP();
  84   1          LCM_EN = 0; 
  85   1      }
  86          /*******************************************************************/
  87          /*                                                                 */
  88          /*  LCD初始化设定                                                  */
  89          /*                                                                 */
  90          /*******************************************************************/
  91          void lcd_init()
  92          { 
  93   1          LCM_PSB = 1;         //并口方式
  94   1          
  95   1          lcd_wcmd(0x34);      //扩充指令操作
  96   1          delay(5);
  97   1          lcd_wcmd(0x30);      //基本指令操作
  98   1          delay(5);
  99   1          lcd_wcmd(0x0C);      //显示开，关光标
 100   1          delay(5);
 101   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 102   1          delay(5);
 103   1      }
 104          
 105          void display_welcome2()
 106          {
 107   1              uchar i;
 108   1          delay(10);                 //延时
 109   1          //wela=0;
 110   1              //dula=0;         
 111   1        
 112   1          lcd_pos(0,0);             //设置显示位置为第一行的第1个字符
 113   1           i = 0;
 114   1          while(dis1[i] != '\0')
 115   1           {                         //显示字符
 116   2             lcd_wdat(dis1[i]);
 117   2             i++;
C51 COMPILER V9.00   12864                                                                 05/17/2017 12:41:03 PAGE 3   

 118   2           }
 119   1          lcd_pos(1,0);             //设置显示位置为第二行的第1个字符
 120   1           i = 0;
 121   1          while(dis2[i] != '\0')
 122   1           {
 123   2             lcd_wdat(dis2[i]);      //显示字符
 124   2             i++;
 125   2           }
 126   1               lcd_pos(2,0);             //设置显示位置为第三行的第1个字符
 127   1           i = 0;
 128   1          while(dis3[i] != '\0')
 129   1           {
 130   2             lcd_wdat(dis3[i]);      //显示字符
 131   2             i++;
 132   2           }
 133   1               lcd_pos(3,0);             //设置显示位置为第四行的第1个字符
 134   1           i = 0;
 135   1          while(dis4[i] != '\0')
 136   1           {
 137   2             lcd_wdat(dis4[i]);      //显示字符
 138   2             i++;
 139   2           }
 140   1        //while(1);
 141   1      
 142   1      
 143   1      }
 144          /*********************************************************/
 145          /*                                                                                                               */
 146          /* 延时x*0.14ms子程序                                                                    */
 147          /*                                                       */
 148          /*********************************************************/
 149          
 150          /*void delay0(uchar x)    //x*0.14MS
 151          {
 152            uchar i;
 153            while(x--)
 154           {
 155            for (i = 0; i<13; i++) {}
 156           }
 157          }*/
 158          /*********************************************************/
 159          /*                                                       */
 160          /* 设定显示位置                                          */
 161          /*                                                       */
 162          /*********************************************************/
 163          void lcd_pos(uchar X,uchar Y)
 164          {                          
 165   1         uchar  pos;
 166   1         if (X==0)
 167   1           {X=0x80;}
 168   1         else if (X==1)
 169   1           {X=0x90;}
 170   1         else if (X==2)
 171   1           {X=0x88;}
 172   1         else if (X==3)
 173   1           {X=0x98;}
 174   1         pos = X+Y ;  
 175   1         lcd_wcmd(pos);     //显示地址
 176   1      }
 177          
 178          void LCD_Data(unsigned char LCDbyte )
 179          {
C51 COMPILER V9.00   12864                                                                 05/17/2017 12:41:03 PAGE 4   

 180   1               unsigned char count;
 181   1               count=(LCDbyte&0xf0)>>4;
 182   1               if (count>0x9) lcd_wdat(count%9+0x40);
 183   1               else lcd_wdat(count+0x30);
 184   1               count=LCDbyte&0x0f;
 185   1               if (count>9) lcd_wdat(count%9+0x40);
 186   1               else lcd_wdat(count+0x30);
 187   1      }
 188          
 189          void display_type()//寻到卡后显示出该卡的类型
 190          {
 191   1              unsigned char num;
 192   1          lcd_wcmd(0x01);      //清除LCD的显示内容
 193   1          delay(5);
 194   1          lcd_pos(0,0);             //设置显示位置为第四行的第1个字符
 195   1              for(num=0;num<8;num++)    //第一行要显示的11个字符
 196   1              {
 197   2              lcd_wdat(table4[num]);  
 198   2              }
 199   1      
 200   1              for(num=0;num<2;num++)//第一行要显示的11个字符
 201   1              {
 202   2                      lcd_pos(0,num+4);
 203   2                      LCD_Data(g_ucTempbuf[num]);//写数字
 204   2              }
 205   1      }
 206          
 207          void display_cardnum()
 208          {
 209   1              unsigned char num;
 210   1          //lcd_wcmd(0x01);      //清除LCD的显示内容
 211   1          delay(5);
 212   1          lcd_pos(1,0);             //设置显示位置为第四行的第1个字符
 213   1              for(num=0;num<6;num++)    //第一行要显示的11个字符
 214   1              {
 215   2              lcd_wdat(table3[num]);  
 216   2              }
 217   1      
 218   1              for(num=0;num<4;num++)//第一行要显示的11个字符
 219   1              {
 220   2                      lcd_pos(1,num+3);
 221   2                      LCD_Data(g_ucTempbuf[num]);//写数字
 222   2              }
 223   1      }
 224          
 225           


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    446    ----
   CONSTANT SIZE    =     69    ----
   XDATA SIZE       =   ----       1
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
